{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///external {\"root\":\"L\",\"commonjs\":\"leaflet\",\"commonjs2\":\"leaflet\",\"amd\":\"leaflet\"}","webpack:///./src/leaflet.trackplayback/util.js","webpack:///./src/leaflet.trackplayback/track.js","webpack:///./src/leaflet.trackplayback/trackcontroller.js","webpack:///./src/leaflet.trackplayback/clock.js","webpack:///./src/leaflet.trackplayback/tracklayer.js","webpack:///./src/leaflet.trackplayback/draw.js","webpack:///./src/leaflet.trackplayback/trackplayback.js","webpack:///./src/leaflet.trackplayback/index.js"],"names":["root","factory","exports","module","require","define","amd","a","i","window","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","isArray","arr","Array","toString","Track","external_root_L_commonjs_leaflet_commonjs2_leaflet_amd_leaflet_default","Class","extend","initialize","trackData","options","setOptions","this","forEach","item","isOrigin","_trackPoints","_timeTick","_update","addTrackPoint","trackPoint","len","length","_addTrackPoint","getTimes","times","push","time","getStartTrackPoint","getEndTrackPoint","getTrackPointByTime","_getCalculateTrackPointByTime","endpoint","startPt","label","endPt","left","right","parseInt","t0","t1","p0","p1","point","lng","lat","distanceTo","v","sinx","y","cosx","x","step","dir","Math","PI","asin","undefined","getTrackPointsBeforeTime","tpoints","_sortTrackPointsByTime","_updatetimeTick","j","tmp","TrackController","tracks","draw","_tracks","addTrack","_draw","_updateTime","getMinTime","_minTime","getMaxTime","_maxTime","track","Error","drawTracksByTime","clear","tps","drawTrack","stime","etime","Clock","includes","Mixin","Events","speed","maxSpeed","trackController","_trackController","_endTime","_curTime","_speed","_maxSpeed","_intervalID","_lastFpsUpdateTime","start","Util","requestAnimFrame","_tick","stop","cancelAnimFrame","rePlaying","slowSpeed","quickSpeed","getSpeed","getCurTime","getStartTime","getEndTime","isPlaying","setCursor","fire","setSpeed","_caculatefpsTime","now","Date","isPause","stepTime","pow","TrackLayer","Renderer","padding","onAdd","map","_container","DomUtil","getPane","pane","appendChild","_ctx","getContext","onRemove","remove","getContainer","getBounds","_bounds","_map","_animatingZoom","b","container","size","getSize","Browser","retina","setPosition","min","width","height","style","scale","translate","Draw","trackPointOptions","isDraw","useCanvas","stroke","color","fill","fillColor","opacity","radius","trackLineOptions","weight","targetOptions","useImg","imgUrl","showText","showTooltip","toolTipOptions","offset","direction","permanent","_showTrackPoint","_showTrackLine","on","_onmousemoveEvt","_trackLayer","addTo","_trackLayerUpdate","_canvas","_bufferTracks","_trackPointFeatureGroup","featureGroup","img","Image","onload","_targetImg","onerror","src","update","trackpoints","_drawTrack","showTrackPoint","hideTrackPoint","showTrackLine","hideTrackLine","off","hasLayer","removeLayer","_clearLayer","element","index","e","layerPoint","leni","tpoint","_getLayerPoint","_opentoolTip","_tooltip","cursor","trackpoint","latlng","latLng","tooltip","setLatLng","setContent","_getTooltipText","_drawTrackLine","targetPoint","_drawShipImage","_drawShipCanvas","_drawtxt","_drawTrackPointsCanvas","_drawTrackPointsSvg","tp0","save","beginPath","moveTo","tpi","lineTo","globalAlpha","strokeStyle","lineWidth","fillStyle","restore","latLngToLayerPoint","arc","cricleMarker","circleMarker","bindTooltip","addLayer","text","font","textAlign","textBaseline","fillText","rotate","w","h","dh","closePath","drawImage","targetobj","content","info","join","bounds","clearRect","clearLayers","[object Object]","TrackPlayBack","data","drawOptions","_initTracks","clock","clockOptions","dispose","obj","coordinates","coordinate","assign","trackplayback"],"mappings":"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","file":"leaflet.trackplayback.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"leaflet\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"leaflet\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"leaflet\")) : factory(root[\"L\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","export function isArray (arr) {\n  return Array.isArray ? Array.isArray(arr) : Object.prototype.toString.call(arr) === '[object Array]'\n}\n","import L from 'leaflet'\n\nimport {\n  isArray\n} from './util'\n\n/**\n * 轨迹类\n */\nexport const Track = L.Class.extend({\n\n  initialize: function (trackData = [], options) {\n    L.setOptions(this, options)\n\n    trackData.forEach(item => {\n      // 添加 isOrigin 字段用来标识是否是原始采样点，与插值点区分开\n      item.isOrigin = true\n    })\n    this._trackPoints = trackData\n    this._timeTick = {}\n    this._update()\n  },\n\n  addTrackPoint: function (trackPoint) {\n    if (isArray(trackPoint)) {\n      for (let i = 0, len = trackPoint.length; i < len; i++) {\n        this.addTrackPoint(trackPoint[i])\n      }\n    }\n    this._addTrackPoint(trackPoint)\n  },\n\n  getTimes: function () {\n    let times = []\n    for (let i = 0, len = this._trackPoints.length; i < len; i++) {\n      times.push(this._trackPoints[i].time)\n    }\n    return times\n  },\n\n  getStartTrackPoint: function () {\n    return this._trackPoints[0]\n  },\n\n  getEndTrackPoint: function () {\n    return this._trackPoints[this._trackPoints.length - 1]\n  },\n\n  getTrackPointByTime: function (time) {\n    return this._trackPoints[this._timeTick[time]]\n  },\n\n  _getCalculateTrackPointByTime: function (time) {\n    // 先判断最后一个点是否为原始点\n    let endpoint = this.getTrackPointByTime(time)\n    let startPt = this.getStartTrackPoint()\n    const label = startPt.label;\n    let endPt = this.getEndTrackPoint()\n    let times = this.getTimes()\n    if (time < startPt.time || time > endPt.time) return\n    let left = 0\n    let right = times.length - 1\n    let n\n    // 处理只有一个点情况\n    if (left === right) {\n      return endpoint\n    }\n    // 通过【二分查找】法查出当前时间所在的时间区间\n    while (right - left !== 1) {\n      n = parseInt((left + right) / 2)\n      if (time > times[n]) left = n\n      else right = n\n    }\n\n    let t0 = times[left]\n    let t1 = times[right]\n    let t = time\n    let p0 = this.getTrackPointByTime(t0)\n    let p1 = this.getTrackPointByTime(t1)\n    startPt = L.point(p0.lng, p0.lat)\n    endPt = L.point(p1.lng, p1.lat)\n    let s = startPt.distanceTo(endPt)\n    // 不同时间在同一个点情形\n    if (s <= 0) {\n      endpoint = p1\n      return endpoint\n    }\n    // 假设目标在两点间做匀速直线运动\n    // 求解速度向量，并计算时间 t 目标所在位置\n    let v = s / (t1 - t0)\n    let sinx = (endPt.y - startPt.y) / s\n    let cosx = (endPt.x - startPt.x) / s\n    let step = v * (t - t0)\n    let x = startPt.x + step * cosx\n    let y = startPt.y + step * sinx\n    // 求目标的运动方向，0-360度\n    let dir = endPt.x >= startPt.x ? (Math.PI * 0.5 - Math.asin(sinx)) * 180 / Math.PI : (Math.PI * 1.5 + Math.asin(sinx)) * 180 / Math.PI\n      \n    if (endpoint) {\n      if (endpoint.dir === undefined) {\n        endpoint.dir = dir\n      }\n    } else {\n      endpoint = {\n        lng: x,\n        lat: y,\n        dir: endPt.dir || dir,\n        isOrigin: false,\n        time: time,\n        label: label\n      }\n    }\n    return endpoint\n  },\n\n  // 获取某个时间点之前走过的轨迹\n  getTrackPointsBeforeTime: function (time) {\n    let tpoints = []\n    for (let i = 0, len = this._trackPoints.length; i < len; i++) {\n      if (this._trackPoints[i].time < time) {\n        tpoints.push(this._trackPoints[i])\n      }\n    }\n    // 获取最后一个点，根据时间线性插值而来\n    let endPt = this._getCalculateTrackPointByTime(time)\n    if (endPt) {\n      tpoints.push(endPt)\n    }\n    return tpoints\n  },\n\n  _addTrackPoint: function (trackPoint) {\n    trackPoint.isOrigin = true\n    this._trackPoints.push(trackPoint)\n    this._update()\n  },\n\n  _update: function () {\n    this._sortTrackPointsByTime()\n    this._updatetimeTick()\n  },\n\n  // 轨迹点按时间排序 【冒泡排序】\n  _sortTrackPointsByTime: function () {\n    let len = this._trackPoints.length\n    for (let i = 0; i < len; i++) {\n      for (let j = 0; j < len - 1 - i; j++) {\n        if (this._trackPoints[j].time > this._trackPoints[j + 1].time) {\n          let tmp = this._trackPoints[j + 1]\n          this._trackPoints[j + 1] = this._trackPoints[j]\n          this._trackPoints[j] = tmp\n        }\n      }\n    }\n  },\n\n  // 为轨迹点建立时间索引，优化查找性能\n  _updatetimeTick: function () {\n    this._timeTick = {}\n    for (let i = 0, len = this._trackPoints.length; i < len; i++) {\n      this._timeTick[this._trackPoints[i].time] = i\n    }\n  }\n})\n\nexport const track = function (trackData, options) {\n  return new Track(trackData, options)\n}\n","import L from 'leaflet'\n\nimport {\n  isArray\n} from './util'\nimport {\n  Track\n} from './track'\n\n/**\n * 控制器类\n * 控制轨迹和绘制\n */\nexport const TrackController = L.Class.extend({\n\n  initialize: function (tracks = [], draw, options) {\n    L.setOptions(this, options)\n\n    this._tracks = []\n    this.addTrack(tracks)\n\n    this._draw = draw\n\n    this._updateTime()\n  },\n\n  getMinTime: function () {\n    return this._minTime\n  },\n\n  getMaxTime: function () {\n    return this._maxTime\n  },\n\n  addTrack: function (track) {\n    if (isArray(track)) {\n      for (let i = 0, len = track.length; i < len; i++) {\n        this.addTrack(track[i])\n      }\n    } else if (track instanceof Track) {\n      this._tracks.push(track)\n      this._updateTime()\n    } else {\n      throw new Error('tracks must be an instance of `Track` or an array of `Track` instance!')\n    }\n  },\n\n  drawTracksByTime: function (time) {\n    this._draw.clear()\n    for (let i = 0, len = this._tracks.length; i < len; i++) {\n      let track = this._tracks[i]\n      let tps = track.getTrackPointsBeforeTime(time)\n      if (tps && tps.length) this._draw.drawTrack(tps)\n    }\n  },\n\n  _updateTime: function () {\n    this._minTime = this._tracks[0].getStartTrackPoint().time\n    this._maxTime = this._tracks[0].getEndTrackPoint().time\n    for (let i = 0, len = this._tracks.length; i < len; i++) {\n      let stime = this._tracks[i].getStartTrackPoint().time\n      let etime = this._tracks[i].getEndTrackPoint().time\n      if (stime < this._minTime) {\n        this._minTime = stime\n      }\n      if (etime > this._maxTime) {\n        this._maxTime = etime\n      }\n    }\n  }\n\n})\n\nexport const trackController = function (tracks, draw, options) {\n  return new TrackController(tracks, draw, options)\n}\n","import L from 'leaflet'\n/**\n * 时钟类，控制轨迹播放动画\n */\nexport const Clock = L.Class.extend({\n\n  includes: L.Mixin.Events,\n\n  options: {\n    // 播放速度\n    // 计算方法 fpstime * Math.pow(2, this._speed - 1)\n    speed: 12,\n    // 最大播放速度\n    maxSpeed: 65\n  },\n\n  initialize: function (trackController, options) {\n    L.setOptions(this, options)\n\n    this._trackController = trackController\n    this._endTime = this._trackController.getMaxTime()\n    this._curTime = this._trackController.getMinTime()\n    this._speed = this.options.speed\n    this._maxSpeed = this.options.maxSpeed\n    this._intervalID = null\n    this._lastFpsUpdateTime = 0\n  },\n\n  start: function () {\n    if (this._intervalID) return\n    this._intervalID = L.Util.requestAnimFrame(this._tick, this)\n  },\n\n  stop: function () {\n    if (!this._intervalID) return\n    L.Util.cancelAnimFrame(this._intervalID)\n    this._intervalID = null\n    this._lastFpsUpdateTime = 0\n  },\n\n  rePlaying: function () {\n    this.stop()\n    this._curTime = this._trackController.getMinTime()\n    this.start()\n  },\n\n  slowSpeed: function () {\n    this._speed = this._speed <= 1 ? this._speed : this._speed - 1\n    if (this._intervalID) {\n      this.stop()\n      this.start()\n    }\n  },\n\n  quickSpeed: function () {\n    this._speed = this._speed >= this._maxSpeed ? this._speed : this._speed + 1\n    if (this._intervalID) {\n      this.stop()\n      this.start()\n    }\n  },\n\n  getSpeed: function () {\n    return this._speed\n  },\n\n  getCurTime: function () {\n    return this._curTime\n  },\n\n  getStartTime: function () {\n    return this._trackController.getMinTime()\n  },\n\n  getEndTime: function () {\n    return this._trackController.getMaxTime()\n  },\n\n  isPlaying: function () {\n    return !!this._intervalID\n  },\n\n  setCursor: function (time) {\n    this._curTime = time\n    this._trackController.drawTracksByTime(this._curTime)\n    this.fire('tick', {\n      time: this._curTime\n    })\n  },\n\n  setSpeed: function (speed) {\n    this._speed = speed\n    if (this._intervalID) {\n      this.stop()\n      this.start()\n    }\n  },\n\n  // 计算两帧时间间隔，单位：秒\n  _caculatefpsTime: function (now) {\n    let time\n    if (this._lastFpsUpdateTime === 0) {\n      time = 0\n    } else {\n      time = now - this._lastFpsUpdateTime\n    }\n    this._lastFpsUpdateTime = now\n    // 将毫秒转换成秒\n    time = time / 1000\n    return time\n  },\n\n  _tick: function () {\n    let now = +new Date()\n    let fpstime = this._caculatefpsTime(now)\n    let isPause = false\n    let stepTime = fpstime * Math.pow(2, this._speed - 1)\n    this._curTime += stepTime\n    if (this._curTime >= this._endTime) {\n      this._curTime = this._endTime\n      isPause = true\n    }\n    this._trackController.drawTracksByTime(this._curTime)\n    this.fire('tick', {\n      time: this._curTime\n    })\n    if (!isPause) this._intervalID = L.Util.requestAnimFrame(this._tick, this)\n  }\n})\n\nexport const clock = function (trackController, options) {\n  return new Clock(trackController, options)\n}\n","import L from 'leaflet'\n\n/**\n * 轨迹图层\n */\nexport const TrackLayer = L.Renderer.extend({\n\n  initialize: function (options) {\n    L.Renderer.prototype.initialize.call(this, options)\n    this.options.padding = 0.1\n  },\n\n  onAdd: function (map) {\n    this._container = L.DomUtil.create('canvas', 'leaflet-zoom-animated')\n\n    var pane = map.getPane(this.options.pane)\n    pane.appendChild(this._container)\n\n    this._ctx = this._container.getContext('2d')\n\n    this._update()\n  },\n\n  onRemove: function (map) {\n    L.DomUtil.remove(this._container)\n  },\n\n  getContainer: function () {\n    return this._container\n  },\n\n  getBounds: function () {\n    return this._bounds\n  },\n\n  _update: function () {\n    if (this._map._animatingZoom && this._bounds) {\n      return\n    }\n\n    L.Renderer.prototype._update.call(this)\n\n    var b = this._bounds\n\n    var container = this._container\n\n    var size = b.getSize()\n\n    var m = L.Browser.retina ? 2 : 1\n\n    L.DomUtil.setPosition(container, b.min)\n\n    // set canvas size (also clearing it); use double size on retina\n    container.width = m * size.x\n    container.height = m * size.y\n    container.style.width = size.x + 'px'\n    container.style.height = size.y + 'px'\n\n    if (L.Browser.retina) {\n      this._ctx.scale(2, 2)\n    }\n\n    // translate so we use the same path coordinates after canvas element moves\n    this._ctx.translate(-b.min.x, -b.min.y)\n\n    // Tell paths to redraw themselves\n    this.fire('update')\n  }\n})\n","import L from \"leaflet\";\n\nimport { TrackLayer } from \"./tracklayer\";\n\n/**\n * 绘制类\n * 完成轨迹线、轨迹点、目标物的绘制工作\n */\nexport const Draw = L.Class.extend({\n  trackPointOptions: {\n    isDraw: false,\n    useCanvas: true,\n    stroke: false,\n    color: \"#ef0300\",\n    fill: true,\n    fillColor: \"#ef0300\",\n    opacity: 0.3,\n    radius: 4,\n  },\n  trackLineOptions: {\n    isDraw: false,\n    stroke: true,\n    color: \"#1C54E2\", // stroke color\n    weight: 2,\n    fill: false,\n    fillColor: \"#000\",\n    opacity: 0.3,\n  },\n  targetOptions: {\n    useImg: false,\n    imgUrl: \"../../static/images/ship.png\",\n    showText: false,\n    showTooltip: false,\n    width: 8,\n    height: 18,\n    color: \"#00f\", // stroke color\n    fillColor: \"#9FD12D\",\n  },\n  toolTipOptions: {\n    offset: [0, 0],\n    direction: \"top\",\n    permanent: false,\n  },\n\n  initialize: function (map, options) {\n    L.extend(this.trackPointOptions, options.trackPointOptions);\n    L.extend(this.trackLineOptions, options.trackLineOptions);\n    L.extend(this.targetOptions, options.targetOptions);\n    L.extend(this.toolTipOptions, options.toolTipOptions);\n\n    this._showTrackPoint = this.trackPointOptions.isDraw;\n    this._showTrackLine = this.trackLineOptions.isDraw;\n\n    this._map = map;\n    this._map.on(\"mousemove\", this._onmousemoveEvt, this);\n\n    this._trackLayer = new TrackLayer().addTo(map);\n    this._trackLayer.on(\"update\", this._trackLayerUpdate, this);\n\n    this._canvas = this._trackLayer.getContainer();\n    this._ctx = this._canvas.getContext(\"2d\");\n\n    this._bufferTracks = [];\n\n    if (!this.trackPointOptions.useCanvas) {\n      this._trackPointFeatureGroup = L.featureGroup([]).addTo(map);\n    }\n\n    // 目标如果使用图片，先加载图片\n    if (this.targetOptions.useImg) {\n      const img = new Image();\n      img.onload = () => {\n        this._targetImg = img;\n      };\n      img.onerror = () => {\n        throw new Error(\"img load error!\");\n      };\n      img.src = this.targetOptions.imgUrl;\n    }\n  },\n\n  update: function () {\n    this._trackLayerUpdate();\n  },\n\n  drawTrack: function (trackpoints) {\n    this._bufferTracks.push(trackpoints);\n    this._drawTrack(trackpoints);\n  },\n\n  showTrackPoint: function () {\n    this._showTrackPoint = true;\n    this.update();\n  },\n\n  hideTrackPoint: function () {\n    this._showTrackPoint = false;\n    this.update();\n  },\n\n  showTrackLine: function () {\n    this._showTrackLine = true;\n    this.update();\n  },\n\n  hideTrackLine: function () {\n    this._showTrackLine = false;\n    this.update();\n  },\n\n  remove: function () {\n    this._bufferTracks = [];\n    this._trackLayer.off(\"update\", this._trackLayerUpdate, this);\n    this._map.off(\"mousemove\", this._onmousemoveEvt, this);\n    if (this._map.hasLayer(this._trackLayer)) {\n      this._map.removeLayer(this._trackLayer);\n    }\n    if (this._map.hasLayer(this._trackPointFeatureGroup)) {\n      this._map.removeLayer(this._trackPointFeatureGroup);\n    }\n  },\n\n  clear: function () {\n    this._clearLayer();\n    this._bufferTracks = [];\n  },\n\n  _trackLayerUpdate: function () {\n    if (this._bufferTracks.length) {\n      this._clearLayer();\n      this._bufferTracks.forEach(\n        function (element, index) {\n          this._drawTrack(element);\n        }.bind(this)\n      );\n    }\n  },\n\n  _onmousemoveEvt: function (e) {\n    if (!this._showTrackPoint) {\n      return;\n    }\n    let point = e.layerPoint;\n    if (this._bufferTracks.length) {\n      for (let i = 0, leni = this._bufferTracks.length; i < leni; i++) {\n        for (let j = 0, len = this._bufferTracks[i].length; j < len; j++) {\n          let tpoint = this._getLayerPoint(this._bufferTracks[i][j]);\n          if (point.distanceTo(tpoint) <= this.trackPointOptions.radius) {\n            this._opentoolTip(this._bufferTracks[i][j]);\n            return;\n          }\n        }\n      }\n    }\n    if (this._map.hasLayer(this._tooltip)) {\n      this._map.removeLayer(this._tooltip);\n    }\n    this._canvas.style.cursor = \"pointer\";\n  },\n\n  _opentoolTip: function (trackpoint) {\n    if (this._map.hasLayer(this._tooltip)) {\n      this._map.removeLayer(this._tooltip);\n    }\n    this._canvas.style.cursor = \"default\";\n    let latlng = L.latLng(trackpoint.lat, trackpoint.lng);\n    let tooltip = (this._tooltip = L.tooltip(this.toolTipOptions));\n    tooltip.setLatLng(latlng);\n    tooltip.addTo(this._map);\n    tooltip.setContent(this._getTooltipText(trackpoint));\n  },\n\n  _drawTrack: function (trackpoints) {\n    // 画轨迹线\n    if (this._showTrackLine) {\n      this._drawTrackLine(trackpoints);\n    }\n    // 画船\n    let targetPoint = trackpoints[trackpoints.length - 1];\n    if (this.targetOptions.useImg && this._targetImg) {\n      this._drawShipImage(targetPoint);\n    } else {\n      this._drawShipCanvas(targetPoint);\n    }\n    // 画标注信息\n    if (this.targetOptions.showText) {\n      const label = targetPoint.label || \"航向\";\n      this._drawtxt(`${label}：${parseInt(targetPoint.dir)}`, targetPoint);\n    }\n    // 画经过的轨迹点\n    if (this._showTrackPoint) {\n      if (this.trackPointOptions.useCanvas) {\n        this._drawTrackPointsCanvas(trackpoints);\n      } else {\n        this._drawTrackPointsSvg(trackpoints);\n      }\n    }\n  },\n  _drawTrackLine: function (trackpoints) {\n    let options = this.trackLineOptions;\n    let tp0 = this._getLayerPoint(trackpoints[0]);\n    this._ctx.save();\n    this._ctx.beginPath();\n    // 画轨迹线\n    this._ctx.moveTo(tp0.x, tp0.y);\n    for (let i = 1, len = trackpoints.length; i < len; i++) {\n      let tpi = this._getLayerPoint(trackpoints[i]);\n      this._ctx.lineTo(tpi.x, tpi.y);\n    }\n    this._ctx.globalAlpha = options.opacity;\n    if (options.stroke) {\n      this._ctx.strokeStyle = options.color;\n      this._ctx.lineWidth = options.weight;\n      this._ctx.stroke();\n    }\n    if (options.fill) {\n      this._ctx.fillStyle = options.fillColor;\n      this._ctx.fill();\n    }\n    this._ctx.restore();\n  },\n\n  _drawTrackPointsCanvas: function (trackpoints) {\n    let options = this.trackPointOptions;\n    this._ctx.save();\n    for (let i = 0, len = trackpoints.length; i < len; i++) {\n      if (trackpoints[i].isOrigin) {\n        let latLng = L.latLng(trackpoints[i].lat, trackpoints[i].lng);\n        let radius = options.radius;\n        let point = this._map.latLngToLayerPoint(latLng);\n        this._ctx.beginPath();\n        this._ctx.arc(point.x, point.y, radius, 0, Math.PI * 2, false);\n        this._ctx.globalAlpha = options.opacity;\n        if (options.stroke) {\n          this._ctx.strokeStyle = options.color;\n          this._ctx.stroke();\n        }\n        if (options.fill) {\n          this._ctx.fillStyle = options.fillColor;\n          this._ctx.fill();\n        }\n      }\n    }\n    this._ctx.restore();\n  },\n\n  _drawTrackPointsSvg: function (trackpoints) {\n    for (let i = 0, len = trackpoints.length; i < len; i++) {\n      if (trackpoints[i].isOrigin) {\n        let latLng = L.latLng(trackpoints[i].lat, trackpoints[i].lng);\n        let cricleMarker = L.circleMarker(latLng, this.trackPointOptions);\n        cricleMarker.bindTooltip(\n          this._getTooltipText(trackpoints[i]),\n          this.toolTipOptions\n        );\n        this._trackPointFeatureGroup.addLayer(cricleMarker);\n      }\n    }\n  },\n\n  _drawtxt: function (text, trackpoint) {\n    let point = this._getLayerPoint(trackpoint);\n    this._ctx.save();\n    this._ctx.font = \"12px Verdana\";\n    this._ctx.fillStyle = \"#000\";\n    this._ctx.textAlign = \"center\";\n    this._ctx.textBaseline = \"bottom\";\n    this._ctx.fillText(text, point.x, point.y - 12, 200);\n    this._ctx.restore();\n  },\n\n  _drawShipCanvas: function (trackpoint) {\n    let point = this._getLayerPoint(trackpoint);\n    let rotate = trackpoint.dir || 0;\n    let w = this.targetOptions.width;\n    let h = this.targetOptions.height;\n    let dh = h / 3;\n\n    this._ctx.save();\n    this._ctx.fillStyle = this.targetOptions.fillColor;\n    this._ctx.strokeStyle = this.targetOptions.color;\n    this._ctx.translate(point.x, point.y);\n    this._ctx.rotate((Math.PI / 180) * rotate);\n    this._ctx.beginPath();\n    this._ctx.moveTo(0, 0 - h / 2);\n    this._ctx.lineTo(0 - w / 2, 0 - h / 2 + dh);\n    this._ctx.lineTo(0 - w / 2, 0 + h / 2);\n    this._ctx.lineTo(0 + w / 2, 0 + h / 2);\n    this._ctx.lineTo(0 + w / 2, 0 - h / 2 + dh);\n    this._ctx.closePath();\n    this._ctx.fill();\n    this._ctx.stroke();\n    this._ctx.restore();\n  },\n\n  _drawShipImage: function (trackpoint) {\n    let point = this._getLayerPoint(trackpoint);\n    let dir = trackpoint.dir || 0;\n    let width = this.targetOptions.width;\n    let height = this.targetOptions.height;\n    let offset = {\n      x: width / 2,\n      y: height / 2,\n    };\n    this._ctx.save();\n    this._ctx.translate(point.x, point.y);\n    this._ctx.rotate((Math.PI / 180) * dir);\n    this._ctx.drawImage(\n      this._targetImg,\n      0 - offset.x,\n      0 - offset.y,\n      width,\n      height\n    );\n    this._ctx.restore();\n  },\n\n  _getTooltipText: function (targetobj) {\n    let content = [];\n    content.push(\"<table>\");\n    if (targetobj.info && targetobj.info.length) {\n      for (let i = 0, len = targetobj.info.length; i < len; i++) {\n        content.push(\"<tr>\");\n        content.push(\"<td>\" + targetobj.info[i].key + \"</td>\");\n        content.push(\"<td>\" + targetobj.info[i].value + \"</td>\");\n        content.push(\"</tr>\");\n      }\n    }\n    content.push(\"</table>\");\n    content = content.join(\"\");\n    return content;\n  },\n  _clearLayer: function () {\n    let bounds = this._trackLayer.getBounds();\n    if (bounds) {\n      let size = bounds.getSize();\n      this._ctx.clearRect(bounds.min.x, bounds.min.y, size.x, size.y);\n    } else {\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n    if (this._map.hasLayer(this._trackPointFeatureGroup)) {\n      this._trackPointFeatureGroup.clearLayers();\n    }\n  },\n\n  _getLayerPoint(trackpoint) {\n    return this._map.latLngToLayerPoint(\n      L.latLng(trackpoint.lat, trackpoint.lng)\n    );\n  },\n});\n\nexport const draw = function (map, options) {\n  return new Draw(map, options);\n};\n","import L from \"leaflet\";\n\nimport { Track } from \"./track\";\nimport { TrackController } from \"./trackcontroller\";\nimport { Clock } from \"./clock\";\nimport { Draw } from \"./draw\";\nimport * as Util from \"./util\";\n\n/**\n * single track data\n * [{lat: 30, lng: 116, time: 1502529980, heading: 300, info:[]},{},....]\n *\n * mutiple track data\n * [single track data, single track data, single track data]\n */\nexport const TrackPlayBack = L.Class.extend({\n  includes: L.Mixin.Events,\n\n  initialize: function (data, map, options = {}) {\n    let drawOptions = {\n      trackPointOptions: options.trackPointOptions,\n      trackLineOptions: options.trackLineOptions,\n      targetOptions: options.targetOptions,\n      toolTipOptions: options.toolTipOptions,\n    };\n    this.tracks = this._initTracks(data);\n    this.draw = new Draw(map, drawOptions);\n    this.trackController = new TrackController(this.tracks, this.draw);\n    this.clock = new Clock(this.trackController, options.clockOptions);\n\n    this.clock.on(\"tick\", this._tick, this);\n  },\n  start: function () {\n    this.clock.start();\n    return this;\n  },\n  stop: function () {\n    this.clock.stop();\n    return this;\n  },\n  rePlaying: function () {\n    this.clock.rePlaying();\n    return this;\n  },\n  slowSpeed: function () {\n    this.clock.slowSpeed();\n    return this;\n  },\n  quickSpeed: function () {\n    this.clock.quickSpeed();\n    return this;\n  },\n  getSpeed: function () {\n    return this.clock.getSpeed();\n  },\n  getCurTime: function () {\n    return this.clock.getCurTime();\n  },\n  getStartTime: function () {\n    return this.clock.getStartTime();\n  },\n  getEndTime: function () {\n    return this.clock.getEndTime();\n  },\n  isPlaying: function () {\n    return this.clock.isPlaying();\n  },\n  setCursor: function (time) {\n    this.clock.setCursor(time);\n    return this;\n  },\n  setSpeed: function (speed) {\n    this.clock.setSpeed(speed);\n    return this;\n  },\n  showTrackPoint: function () {\n    this.draw.showTrackPoint();\n    return this;\n  },\n  hideTrackPoint: function () {\n    this.draw.hideTrackPoint();\n    return this;\n  },\n  showTrackLine: function () {\n    this.draw.showTrackLine();\n    return this;\n  },\n  hideTrackLine: function () {\n    this.draw.hideTrackLine();\n    return this;\n  },\n  dispose: function () {\n    this.clock.off(\"tick\", this._tick);\n    this.draw.remove();\n    this.tracks = null;\n    this.draw = null;\n    this.trackController = null;\n    this.clock = null;\n  },\n  _tick: function (e) {\n    this.fire(\"tick\", e);\n  },\n  _initTracks: function (obj) {\n    let tracks = [];\n    if (Util.isArray(obj) && obj.length) {\n\n      const data = obj.map((element) =>\n        element.coordinates.map((coordinate) =>\n          Object.assign(coordinate, element.targetOptions)\n        )\n      );\n\n      if (Util.isArray(data[0])) {\n        // 多条轨迹\n        for (let i = 0, len = data.length; i < len; i++) {\n          tracks.push(new Track(data[i]));\n        }\n      } else {\n        // 单条轨迹\n        tracks.push(new Track(data));\n      }\n    }\n    return tracks;\n  },\n});\n\nexport const trackplayback = function (data, map, options) {\n  return new TrackPlayBack(data, map, options);\n};\n","import L from 'leaflet'\n\nimport {\n  TrackPlayBack,\n  trackplayback\n} from './trackplayback'\n\nL.TrackPlayBack = TrackPlayBack\nL.trackplayback = trackplayback\n"],"sourceRoot":""}